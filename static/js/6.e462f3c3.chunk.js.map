{"version":3,"sources":["pages/MovieDetails/index.module.css","../node_modules/@material-ui/icons/Star.js","../node_modules/@material-ui/core/esm/Divider/Divider.js","pages/MovieDetails/Loading.tsx","pages/MovieDetails/index.tsx","../node_modules/react-query/es/react/useQuery.js","utils/constants.ts","utils/service.ts"],"names":["module","exports","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","value","default","React","_default","createElement","d","Divider","props","ref","_props$absolute","absolute","classes","className","_props$component","component","Component","_props$flexItem","flexItem","_props$light","light","_props$orientation","orientation","_props$role","role","undefined","_props$variant","variant","other","_objectWithoutProperties","_extends","clsx","root","vertical","withStyles","theme","height","margin","border","flexShrink","backgroundColor","palette","divider","position","bottom","left","width","inset","marginLeft","fade","middle","spacing","marginRight","alignSelf","name","Skeleton","Grid","container","justify","item","xs","sm","style","textAlign","CircularProgress","size","color","MovieDetails","movieId","useParams","arg1","arg2","arg3","parsedOptions","parseQueryArgs","useBaseQuery","QueryObserver","useQuery","service","get","CONSTANTS","BASE_URL","i","enabled","isSuccess","isLoading","error","data","styles","Loading","src","Poster","alt","Title","detailsSection","titleContainer","title","ratingsRoot","fontSize","htmlColor","ratingsContainer","imdbRating","votes","imdbVotes","subInfo","Year","Rated","Released","Runtime","plot","Plot","metaData","md","metaLabel","metaValue","Genre","Director","Writer","Actors","Language","Country","Awards","Production","JSON","stringify","API_KEY","TYPE","getBaseURL","url","URLSearchParams","apikey","toString","params","a","fetch","method","cache","headers","then","res","json","response","Response","Error","message","post","body"],"mappings":"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","file":"static/js/6.e462f3c3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"MovieDetails_root__257x1\",\"detailsSection\":\"MovieDetails_detailsSection__WRtjc\",\"titleContainer\":\"MovieDetails_titleContainer__2wRNP\",\"title\":\"MovieDetails_title__1Uud6\",\"ratingsRoot\":\"MovieDetails_ratingsRoot__3G1Y_\",\"ratingsContainer\":\"MovieDetails_ratingsContainer__1SnAa\",\"votes\":\"MovieDetails_votes__1cmXr\",\"subInfo\":\"MovieDetails_subInfo__2uCJk\",\"plot\":\"MovieDetails_plot__2Ef-P\",\"metaData\":\"MovieDetails_metaData__2qwx3\",\"metaLabel\":\"MovieDetails_metaLabel__106aX\",\"metaValue\":\"MovieDetails_metaValue__2Q1op\",\"ldsSpinner\":\"MovieDetails_ldsSpinner__2tsOD\"};","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\"\n}), 'Star');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      height: 1,\n      margin: 0,\n      // Reset browser default style.\n      border: 'none',\n      flexShrink: 0,\n      backgroundColor: theme.palette.divider\n    },\n\n    /* Styles applied to the root element if `absolute={true}`. */\n    absolute: {\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `variant=\"inset\"`. */\n    inset: {\n      marginLeft: 72\n    },\n\n    /* Styles applied to the root element if `light={true}`. */\n    light: {\n      backgroundColor: fade(theme.palette.divider, 0.08)\n    },\n\n    /* Styles applied to the root element if `variant=\"middle\"`. */\n    middle: {\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      height: '100%',\n      width: 1\n    },\n\n    /* Styles applied to the root element if `flexItem={true}`. */\n    flexItem: {\n      alignSelf: 'stretch',\n      height: 'auto'\n    }\n  };\n};\nvar Divider = /*#__PURE__*/React.forwardRef(function Divider(props, ref) {\n  var _props$absolute = props.absolute,\n      absolute = _props$absolute === void 0 ? false : _props$absolute,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'hr' : _props$component,\n      _props$flexItem = props.flexItem,\n      flexItem = _props$flexItem === void 0 ? false : _props$flexItem,\n      _props$light = props.light,\n      light = _props$light === void 0 ? false : _props$light,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$role = props.role,\n      role = _props$role === void 0 ? Component !== 'hr' ? 'separator' : undefined : _props$role,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'fullWidth' : _props$variant,\n      other = _objectWithoutProperties(props, [\"absolute\", \"classes\", \"className\", \"component\", \"flexItem\", \"light\", \"orientation\", \"role\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'fullWidth' && classes[variant], absolute && classes.absolute, flexItem && classes.flexItem, light && classes.light, orientation === 'vertical' && classes.vertical),\n    role: role,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Absolutely position the element.\n   */\n  absolute: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, a vertical divider will have the correct height when used in flex container.\n   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)\n   */\n  flexItem: PropTypes.bool,\n\n  /**\n   * If `true`, the divider will have a lighter color.\n   */\n  light: PropTypes.bool,\n\n  /**\n   * The divider orientation.\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['fullWidth', 'inset', 'middle'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDivider'\n})(Divider);","import Grid from \"@material-ui/core/Grid\";\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\n\r\nconst Skeleton = (): React.ReactElement => {\r\n  return (\r\n    <Grid container justify=\"center\">\r\n      <Grid item xs={12} sm={10} style={{textAlign: \"center\"}}>\r\n        <CircularProgress size={50} style={{color: \"red\"}}/>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Skeleton;\r\n","import { ReactElement } from \"react\";\r\nimport styles from \"./index.module.css\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useQuery } from \"react-query\";\r\nimport service from \"utils/service\";\r\nimport CONSTANTS from \"utils/constants\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Loading from \"./Loading\";\r\n\r\nconst MovieDetails = (): ReactElement => {\r\n  const { movieId } = useParams<{ movieId: string }>();\r\n  const { isSuccess, isLoading, error, data } = useQuery(\r\n    [`movie`, movieId],\r\n    () => service.get(CONSTANTS.BASE_URL, { i: movieId }),\r\n    {\r\n      enabled: !!movieId,\r\n    }\r\n  );\r\n\r\n  return (\r\n    <div className={styles.root}>\r\n      {/* Loading state */}\r\n      {isLoading && <Loading />}\r\n\r\n      {/* Success state */}\r\n      {isSuccess && (\r\n        <Grid container justify=\"center\">\r\n          <Grid item xs={12} sm={10}>\r\n            <Grid container>\r\n              <Grid item xs={12} sm={4}>\r\n                <img\r\n                  src={data.Poster}\r\n                  alt={data.Title}\r\n                  height=\"600\"\r\n                  width=\"100%\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={8} className={styles.detailsSection}>\r\n                <div className={styles.titleContainer}>\r\n                  <div className={styles.title}>{data.Title}</div>\r\n                  <div className={styles.ratingsRoot}>\r\n                    <StarIcon fontSize=\"large\" htmlColor=\"#e4bb24\" />\r\n                    <div>\r\n                      <div className={styles.ratingsContainer}>\r\n                        {data.imdbRating}\r\n                        <i>/10</i>\r\n                      </div>\r\n                      <div className={styles.votes}>{data.imdbVotes}</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className={styles.subInfo}>\r\n                  <div>{data.Year}</div>\r\n                  <div>{data.Rated}</div>\r\n                  <div>{data.Released}</div>\r\n                  <div>{data.Runtime}</div>\r\n                </div>\r\n\r\n                <div className={styles.plot}>{data.Plot}</div>\r\n\r\n                <Divider light={false} />\r\n\r\n                <Grid container className={styles.metaData}>\r\n                  <Grid item xs={3} md={2} className={styles.metaLabel}>\r\n                    Genre :\r\n                  </Grid>\r\n                  <Grid item xs={9} md={10} className={styles.metaValue}>\r\n                    {data.Genre}\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container className={styles.metaData}>\r\n                  <Grid item xs={3} md={2} className={styles.metaLabel}>\r\n                    Director :\r\n                  </Grid>\r\n                  <Grid item xs={9} md={10} className={styles.metaValue}>\r\n                    {data.Director}\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container className={styles.metaData}>\r\n                  <Grid item xs={3} md={2} className={styles.metaLabel}>\r\n                    Writer :\r\n                  </Grid>\r\n                  <Grid item xs={9} md={10} className={styles.metaValue}>\r\n                    {data.Writer}\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container className={styles.metaData}>\r\n                  <Grid item xs={3} md={2} className={styles.metaLabel}>\r\n                    Actors :\r\n                  </Grid>\r\n                  <Grid item xs={9} md={10} className={styles.metaValue}>\r\n                    {data.Actors}\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container className={styles.metaData}>\r\n                  <Grid item xs={3} md={2} className={styles.metaLabel}>\r\n                    Language :\r\n                  </Grid>\r\n                  <Grid item xs={9} md={10} className={styles.metaValue}>\r\n                    {data.Language}\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container className={styles.metaData}>\r\n                  <Grid item xs={3} md={2} className={styles.metaLabel}>\r\n                    Country :\r\n                  </Grid>\r\n                  <Grid item xs={9} md={10} className={styles.metaValue}>\r\n                    {data.Country}\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container className={styles.metaData}>\r\n                  <Grid item xs={3} md={2} className={styles.metaLabel}>\r\n                    Awards :\r\n                  </Grid>\r\n                  <Grid item xs={9} md={10} className={styles.metaValue}>\r\n                    {data.Awards}\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container className={styles.metaData}>\r\n                  <Grid item xs={3} md={2} className={styles.metaLabel}>\r\n                    Production :\r\n                  </Grid>\r\n                  <Grid item xs={9} md={10} className={styles.metaValue}>\r\n                    {data.Production}\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n\r\n      {/* Error state */}\r\n      {!!error && <div>{JSON.stringify(error)}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieDetails;\r\n","import { QueryObserver } from '../core';\nimport { parseQueryArgs } from '../core/utils';\nimport { useBaseQuery } from './useBaseQuery'; // HOOK\n\nexport function useQuery(arg1, arg2, arg3) {\n  var parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n  return useBaseQuery(parsedOptions, QueryObserver);\n}","const CONSTANTS = {\r\n  BASE_URL: \"https://www.omdbapi.com/\",\r\n  API_KEY: \"b9bd48a6\",\r\n  TYPE: \"movie\"\r\n};\r\n\r\nexport default CONSTANTS;\r\n","import CONSTANTS from \"utils/constants\";\r\n\r\n/**\r\n * Generate base URL including OMDB required params\r\n * @param {string} url\r\n * @returns {string}\r\n */\r\nconst getBaseURL = (url: string): string => {\r\n  return `${url}?${new URLSearchParams({\r\n    apikey: CONSTANTS.API_KEY,\r\n  }).toString()}`;\r\n};\r\n\r\n/**\r\n * Service object exported to use across application\r\n */\r\nconst service = {\r\n  get: async (url: string, params: object) => {\r\n    try {\r\n      let response = await fetch(\r\n        `${getBaseURL(url)}&${new URLSearchParams({\r\n          ...params,\r\n        }).toString()}`,\r\n        {\r\n          method: \"GET\",\r\n          cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n          headers: {\r\n            \"Content-Type\": \"application/x-www-form-urlencoded\", // application/x-www-form-urlencoded, application/json\r\n          },\r\n        }\r\n      ).then((res) => res.json());\r\n\r\n      if (response.Response === \"False\") {\r\n        throw Error(response.Error);\r\n      } else {\r\n        return response;\r\n      }\r\n    } catch (error) {\r\n      throw error.message;\r\n    }\r\n  },\r\n  post: async (url: string, data: object) => {\r\n    const response = await fetch(getBaseURL(url), {\r\n      method: \"POST\",\r\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\", // application/x-www-form-urlencoded, application/json\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n    return response.json(); // parses JSON response into native JavaScript objects\r\n  },\r\n};\r\n\r\nexport default service;\r\n"],"sourceRoot":""}